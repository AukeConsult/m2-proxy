plugins {
    id("common.java-netty")
}

apply plugin: 'java'

dependencies {

    implementation 'com.athaydes.rawhttp:rawhttp-core:2.6.0'
    implementation 'com.sparkjava:spark-core:2.9.1'
    implementation project(':proxy-core')
    implementation project(':lib-protbuf')
    implementation project(":lib-shared")
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

testing {
    suites {
        integrationTest(JvmTestSuite) {
            dependencies {
                implementation project()
            }
        }
    }
}

tasks.register('buildServer', Jar) {
    manifest {
        attributes 'Main-Class': 'm2.proxy.ProxyTcpServer'
    }
    archiveBaseName = 'proxy-tcp-server'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks.register('buildClient', Jar) {
    manifest {
        attributes 'Main-Class': 'm2.proxy.ProxyTcpClient'
    }
    archiveBaseName = 'proxy-tcp-client'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks.register('buildRUN') {
    group "build"
    dependsOn(buildClient)
    dependsOn(buildServer)
    copy {
        from 'build/libs/proxy-tcp-client-' + appVersion + appVersionExtension + '.jar'
        into "run"

        from 'build/libs/proxy-tcp-server-' + appVersion + appVersionExtension + '.jar'
        into "run"
    }
}

