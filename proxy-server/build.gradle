plugins {
    id("com.github.johnrengelman.shadow") version "$shadowJarVersion"
    id("io.micronaut.application") version "$micronautVersion"
    id("io.micronaut.aot") version "$micronautVersion"
}

repositories {
    mavenCentral()
}

dependencies {

    annotationProcessor "io.micronaut:micronaut-http-validation"
    annotationProcessor "io.micronaut.serde:micronaut-serde-processor"
    implementation "io.micronaut.serde:micronaut-serde-jackson"
    compileOnly "io.micronaut:micronaut-http-client"
    testImplementation("io.micronaut:micronaut-http-client")

    runtimeOnly "org.yaml:snakeyaml"

    testImplementation 'org.slf4j:slf4j-api:1.7.32'
    testImplementation 'org.mockito:mockito-all:2.0.2-beta'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.1"
    testRuntimeOnly "ch.qos.logback:logback-classic:1.2.3"

}


application {
    mainClass.set("no.auke.m2.proxy.Application")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("no.auke.m2.proxy.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}
