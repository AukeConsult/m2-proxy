buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.4'
    }
}
plugins {
    id 'common.java-conventions'
    id 'common.json-dependencies'
    id 'java-library'
//    id('java')
//    id('idea')
    id('com.google.protobuf') version '0.9.4'

}

sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'com.google.protobuf:protobuf-java:3.6.1'
    implementation 'com.google.protobuf:protobuf-java-util:3.6.1'

    implementation 'io.grpc:grpc-stub:1.15.1'
    implementation 'io.grpc:grpc-protobuf:1.15.1'

    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation 'javax.annotation:javax.annotation-api:1.3.1'
    }

    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.9.4'


}

sourceSets {
    main {
        java {
            srcDirs 'src/proto/main/grpc'
            srcDirs 'src/proto/main/java'
        }
    }
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.15.1'
        }
    }
    generateProtoTasks {
        ofSourceSet('main').configureEach {
            plugins {
                // Apply the "grpc" plugin whose spec is defined above, without
                // options.  Note the braces cannot be omitted, otherwise the
                // plugin will not be added. This is because of the implicit way
                // NamedDomainObjectContainer binds the methods.
                grpc {}
            }
        }
    }
}